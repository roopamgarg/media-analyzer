version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: media_analyzer
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d media_analyzer"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  worker-python:
    build:
      context: ../apps/worker-python
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ../apps/worker-python:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      redis:
        condition: service_healthy

  api:
    build:
      context: ../apps/api
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/media_analyzer
      - REDIS_URL=redis://redis:6379
      - WORKER_PYTHON_URL=http://worker-python:8000
      - JWT_SECRET=your-secret-key
      - S3_BUCKET=media-analyzer-dev
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    volumes:
      - ../apps/api:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      worker-python:
        condition: service_started

  orchestrator:
    build:
      context: ../apps/orchestrator
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/media_analyzer
      - REDIS_URL=redis://redis:6379
      - WORKER_PYTHON_URL=http://worker-python:8000
    volumes:
      - ../apps/orchestrator:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      worker-python:
        condition: service_started

volumes:
  postgres_data:
  redis_data:
